version: 3
domain: python_3_11_features
created_by: 
seed_examples:
  - context: |
      Python 3.11 introduced several new features and optimizations aimed at improving performance and enhancing error handling. 
      Among the notable features are Exception Groups, enhanced error messages, and better performance optimizations.
    questions_and_answers:
      - question: |
          What is an Exception Group in Python 3.11?
        answer: |
          An Exception Group allows multiple exceptions to be raised and handled together, improving error handling in scenarios where more than one exception might occur simultaneously.
      - question: |
          Can you give an example of an Exception Group in Python 3.11?
        answer: |
          ```
          try:
              raise ExceptionGroup("group of errors", [ValueError("error 1"), TypeError("error 2")])
          except* ValueError as e:
              print(f"Caught ValueError: {e}")
          except* TypeError as e:
              print(f"Caught TypeError: {e}")
          ```
      - question: |
          What are the benefits of Exception Group handling in Python 3.11?
        answer: |
          It allows fine-grained exception handling for individual exceptions within a group, making error management in complex applications simpler and more robust.
      - question: |
          What performance optimizations have been introduced in Python 3.11?
        answer: |
          Python 3.11 includes optimizations such as a faster function call performance and improvements in memory usage, making it up to 10-60% faster than previous versions.
      - question: |
          How has error reporting been improved in Python 3.11?
        answer: |
          Python 3.11 provides more detailed and precise error messages, including better traceback formatting and error location highlighting, making debugging easier.

document_outline: |
  Details and repair costs on a DeLorean DMC-12 car.
document:
  repo: https://github.com/poonamzham/backToTheFuture.git
  commit: 
  patterns:
    - data.md
